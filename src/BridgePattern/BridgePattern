브릿지 패턴은 "구현(implementation)으로부터 추상(abstraction) 레이어를 분리하여
이 둘이 서로 독립적으로 변화할 수 있도록 한다."

즉 기능과 구현에 대해서 두 개를 별도의 클래스로 구현을 한다.
(두 개의 다른 계층은 하나는 추상, 하나는 구현이다.
이는 서로 다른 계층의 커플링을 약화시키며 협력은 가능하도록 하는 패턴이다)


Bridge 패턴은 두 구체 클래스 간의 강한 결합을 제거하기 위해서 사용하는 패턴
특히 두 클래스 모두 추상화된 상위 클래스 또는 인터페이스(= 타입)를 가지게 되고,
의존성은 상위 타입간에만 이루어지게 된다.
이를 통해 실제 의존성이 발생하더라도 서로의 구체 타입은 알 수 없도록 한다.
이렇게 되면 두 상위 타입을 구현하는 어느 쪽도 변경이 가능한 상태가 된다.

