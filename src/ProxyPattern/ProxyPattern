실제 기능을 수행하는 객체Real Object 대신 가상의 객체Proxy Object를 사용해 로직의 흐름을 제어하는 디자인 패턴.

1. Virtual Proxy
주체클래스가 리소스 집약적인 경우.
프록시 클래스에서 자잘한 작업들을 처리하고 리소스가 많이 요구되는 작업들이 필요할때만 주체 클래스를 사용하도록 구현

2. Protection Proxy
보호 프록시는 프록시 객체가 사용자의 실제 객체에 대한 접근을 제어.

3. Remote Proxy
프록시 클래스는 로컬에 두고 , 주체 클래스는 Remote 로 존재하는 경우.